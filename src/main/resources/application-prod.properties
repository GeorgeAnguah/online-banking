# Spring Data JPA properties
# ===============================
# = DATA SOURCE MySQL
# ===============================

spring.datasource.url=jdbc:mysql://kodtech.ddns.net:3306/online_banking?\
  createDatabaseIfNotExist=true&\
  useSSL=false&\
  allowPublicKeyRetrieval=true&\
  verifyServerCertificate=false&\
  useLegacyDatetimeCode=false&serverTimezone=America/New_York&\
  rewriteBatchedStatements=true&\
  cachePrepStmts=true&\
  useServerPrepStmts=true
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}

spring.datasource.tomcat.min-idle=15
spring.datasource.tomcat.max-idle=20
spring.datasource.tomcat.max-active=50
spring.datasource.tomcat.max-wait=20000
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.hikari.auto-commit=false
spring.datasource.tomcat.testWhileIdle=true
spring.datasource.tomcat.validationQuery=SELECT 1 FROM DUAL

# ===============================
# = JPA / HIBERNATE
# ===============================
spring.jpa.hibernate.ddl-auto = update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# Performance tuning
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hypersistence.query.max_result_size=50
spring.jpa.properties.hypersistence.session.timeout_millis=1000
spring.jpa.properties.hypersistence.session.flush_timeout_millis=1000
spring.jpa.properties.hibernate.query.in_clause_parameter_padding=true
spring.jpa.properties.hibernate.query.fail_on_pagination_over_collection_fetch=true