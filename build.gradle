import com.github.spotbugs.snom.SpotBugsTask

plugins {
    id 'org.springframework.boot' version '2.5.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.unbroken-dome.test-sets' version '4.0.0'
    id 'com.github.spotbugs' version '4.7.1'
    id 'checkstyle'
    id 'eclipse'
    id 'jacoco'
    id 'idea'
    id 'java'
    id 'pmd'
}

group = 'com.onlinebanking'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
targetCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

testSets {
    integrationTest
}

ext {
    mapstructVersion = '1.4.2.Final'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'

    // Utilities
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'com.github.javafaker:javafaker:1.0.2'

    // Webjars
    implementation 'org.webjars:jquery:3.6.0'
    implementation 'org.webjars:bootstrap:5.1.0'
    implementation 'org.webjars:font-awesome:5.15.3'
    implementation 'org.webjars:popper.js:2.9.3'
    implementation 'org.webjars:bootbox:5.5.2'
    implementation 'org.webjars:datatables:1.10.25'
    implementation 'org.webjars:bootstrap-datetimepicker:6aa746736d'
    implementation 'org.webjars:webjars-locator:0.41'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'

    // MapStruct for Object Mapping
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    // Testing
    testImplementation 'org.mockito:mockito-inline'
    testImplementation 'nl.jqno.equalsverifier:equalsverifier:3.7'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

test {
    useJUnitPlatform()
}

// Checkstyle task to disable xml reports and load config file
tasks.withType(Checkstyle) {
    configFile file("${project.rootDir}/config/checkstyle.xml")
    include '**/*.java'
    exclude '**/gen/**'
    reports {
        xml.enabled = false
        html.enabled = true
    }

    classpath = files()
}

// SpotBugs task to disable xml reports and load config file
tasks.withType(SpotBugsTask) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

pmd {
    ruleSetFiles = files("${project.rootDir}/config/pmd-ruleset.xml")
    ruleSets = []
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.5
            }
        }
    }
}

test.finalizedBy jacocoTestReport // report is always generated after tests run
jacocoTestReport.dependsOn test // tests are required to run before generating the report
check.dependsOn integrationTest, jacocoTestCoverageVerification
